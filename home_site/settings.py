"""
Django settings for home_site project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from kombu import Exchange, Queue
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_#22@3yn%xl3ob+qh6q0g2ujyr&gy0oo0gbq^bnb&!lzzf60m1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Heroku deployment detection
ON_HEROKU = 'ON_HEROKU' in os.environ

ALLOWED_HOSTS = []

if ON_HEROKU:
    ALLOWED_HOSTS = ['desafiodjango.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'home_site',
    'enquetes.apps.EnquetesConfig',
    'django.contrib.admin',  # ativando admin
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # line added for DRF
    'corsheaders',  # line added for DRF
    'rest_framework.authtoken',  # for DRF Token authentication
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # line added for DRF
    'django.middleware.common.CommonMiddleware',  # line added for DRF
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'home_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries':{
                'custom_tags': 'enquetes.templatetags.custom_tags',

            }
        },

    },
]

WSGI_APPLICATION = 'home_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

if ON_HEROKU:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'desafiodjango',
            'USER': 'name',
            'PASSWORD': '',
            'HOST': 'localhost',
            'PORT': '',
        }
    }

    db_from_env = dj_database_url.config(conn_max_age=500)
    DATABASES['default'].update(db_from_env)
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation'
        '.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
        'MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
        '.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
        '.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

USE_I18N = True
LANGUAGES = (
    ('en', u'English'),
    ('pt-br', u'PortuguÃªs'),
)

# LOCALE_PATHS = (PROJECT_DIR.child('locale'),)

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
if ON_HEROKU:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
else:

    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, "static"),
    ]

# The code bellow was added for the Django Rest Framework
# Without the CORS it works thru $curl or browseable API but not thru
# JavaScript

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),

}

CORS_ORIGIN_ALLOW_ALL = True
# CORS_ORIGIN_WHITELIST = (
#        'google.com',
#        'hostname.example.com'
#    )


# Baseado em https://github.com/nayanchandni/docker-django-celery-rabbitmq


###########
# RABBITMQ
BROKER_URL = os.environ.get('BROKER_URL',
                            '')
if 'BROKER_URL' in os.environ:
    CELERY_BROKER_URL = BROKER_URL
    print(BROKER_URL)

CELERY_BROKER_POOL_LIMIT = 1
CELERY_BROKER_CONNECTION_TIMEOUT = 600


#######################
# Celery configuration

# configure queues, currently we have only one
CELERY_DEFAULT_QUEUE = 'default'
CELERY_QUEUES = (
    Queue('default', Exchange('default'), routing_key='default'),
)

# Sensible settings for celery
CELERY_ALWAYS_EAGER = False
CELERY_ACKS_LATE = True
CELERY_TASK_PUBLISH_RETRY = True
CELERY_DISABLE_RATE_LIMITS = False

# By default we will ignore result
# If you want to see results and try out tasks interactively,
# change it to False
# Or change this setting on tasks level
CELERY_IGNORE_RESULT = True
CELERY_SEND_TASK_ERROR_EMAILS = False
CELERY_TASK_RESULT_EXPIRES = 600

# Don't use pickle as serializer, json is much safer
CELERY_TASK_SERIALIZER = "json"
CELERY_ACCEPT_CONTENT = ['application/json']

CELERY_HIJACK_ROOT_LOGGER = False
CELERY_PREFETCH_MULTIPLIER = 1
CELERY_MAX_TASKS_PER_CHILD = 1000

# Add a one-minute timeout to all Celery tasks.
CELERY_TASK_SOFT_TIME_LIMIT = 10
CELERY_BROKER_CONNECTION_TIMEOUT = 20


if ON_HEROKU:
    STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
